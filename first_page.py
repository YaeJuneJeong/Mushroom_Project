# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import socket
import numpy as np
import cv2
import requests
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtWidgets import QMessageBox

from second_page import Ui_SecondWindow
import pyrealsense2 as rs

url_register = "http://184.73.45.24/api/myfarm/register/ip"

pipeline = rs.pipeline()
config = rs.config()
config.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)
config.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.connect(('8.8.8.8', 1))  # connect() for UDP doesn't send packets
local_ip_address = s.getsockname()[0]


class Ui_FirstWindow(object):
    def __init__(self):
        super(Ui_FirstWindow, self).__init__()
        self.isRun = False
        self.send = Send(self)
        self.movie = QtGui.QMovie('./1488.gif')
        self.scale= 1
    def openWindow(self):
        # self.window = QtWidgets.QMainWindow()
        # self.ui = Ui_SecondWindow()
        # self.ui.setupUi(self.window)
        # self.window.show()
        Dialog.close()

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(901, 531)
        self.logo = QtWidgets.QLabel(Dialog)
        self.logo.setGeometry(QtCore.QRect(150,5,171,171))

        self.temp = QtWidgets.QLabel(Dialog)
        self.temp.setGeometry(QtCore.QRect(200, 40, 171, 71))
        self.temp.setTextFormat(QtCore.Qt.AutoText)
        self.temp.setAlignment(QtCore.Qt.AlignCenter)
        self.temp.setObjectName("temp")

        self.temp_2 = QtWidgets.QLabel(Dialog)
        self.temp_2.resize(200,200)
        self.temp_2.setMovie(self.movie)
        self.temp_2.setGeometry(QtCore.QRect(350, 240, 171, 160))
        self.temp_2.setAlignment(QtCore.Qt.AlignCenter)
        self.temp_2.setObjectName("temp_2")

        self.title = QtWidgets.QLabel(Dialog)
        self.title.setText('WIFIを連結して機械のIPを入力してください')
        self.title.setGeometry(QtCore.QRect(250, 170, 900, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        self.title.setFont(font)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(300, 410, 281, 101))
        self.pushButton.setObjectName("pushButton")



        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        # self.temp.setText(_translate("Dialog", "기기 IP 저장"))
        self.temp_2.setText(_translate("Dialog", "-"))
        self.pushButton.setText(_translate("Dialog", 'IP 入力'))
        self.temp_2.setMovie(self.movie)
        self.movie.start()
        self.movie.stop()

        self.send.finished.connect(self.stop)
        self.send.finished.connect(self.openWindow)
        self.send.error.connect(self.error)

        self.pushButton.clicked.connect(self.start)
        font = QtGui.QFont('궁서')
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setStyleSheet("QPushButton{color: white;"
	                                    "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                      "stop:0 rgba(255, 190, 11, 255), stop:1 rgba(251, 86, 7, 255));"
                                      "border-radius:20px}")
        self.pushButton.setFont(font)
        self.temp.resize(QtGui.QPixmap('./logo1.png').width(),QtGui.QPixmap('./logo1.png').height())
        print(QtGui.QPixmap('./logo1.png').height())
        self.temp.setPixmap(QtGui.QPixmap('./logo1.png'))
        logo= QtGui.QPixmap('./logo.png')
        self.scale /=9
        logo = logo.scaled(logo.size()*self.scale)
        self.logo.setPixmap(logo)
    def start(self):
        if not self.send.isRun:
            self.send.isRun = True
            # self.pushButton.setStyleSheet("QPushButton{color: white;"
            #                               "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
            #                               "stop:0 rgba(255, 190, 11, 255), stop:1 rgba(251, 86, 7, 255));"
            #                               "border-radius:20px}")
            self.pushButton.setText('処理中')
            self.send.start()
            self.movie.start()

    def stop(self):
        if self.send.isRun:
            self.send.isRun = False
            self.pushButton.setText('IP 入力')
            self.movie.stop()

    def error(self):
        self.send.isRun = False
        self.movie.stop()
        QMessageBox.information(Dialog, 'Error', 'Please check Network')


class Send(QThread):
    error = pyqtSignal(int)
    info = pyqtSignal(dict)
    finished = pyqtSignal()

    def __init__(self, parent=None):
        super().__init__()
        self.main = parent
        self.isRun = False

    def run(self):
        try:
            profile = pipeline.start(config)
            while self.isRun:
                # change ip address
                data = {'id': 2, 'ip': local_ip_address}
                response = requests.put(url_register, data=data, timeout=10)
                print(response.status_code)

                if response.status_code != 200:
                    raise Exception

                frames = pipeline.wait_for_frames()
                color_frame = frames.get_color_frame()
                color_image = np.asarray(color_frame.get_data())
                cv2.imwrite('./recent.jpg', color_image)
                self.isRun = False
                self.finished.emit()
                break

        except Exception:
            self.error.emit(100)
            self.isRun = False

        finally:
            pipeline.stop()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_FirstWindow()
    Dialog.setStyleSheet("background-color: #dfe0d9;")
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
